#!/bin/bash
set -euo pipefail

BASTION_STACK="$STACK-bastion"

echo "THIS SHOULD NOT HAVE A VALUE? $STACK"
echo "THIS SHOULD NOT HAVE A VALUE? $EC2_KEY_NAME"

echo "START: Create Stack"
# AWS_PAGER="" -- Container does not have 'less'
AWS_PAGER="" aws cloudformation create-stack \
    --template-body "file://./stacks/bastion.yml" \
    --stack-name "$BASTION_STACK" \
    --parameters "ParameterKey=ServiceStackName,ParameterValue=$STACK" "ParameterKey=EC2SSHKeyName,ParameterValue=$EC2_KEY_NAME"
echo "DONE: Create Stack"

echo "START: wait stack-create-complete"
aws cloudformation wait stack-create-complete --stack "$BASTION_STACK"
echo "DONE: wait stack-create-complete"

BASTION_PUBLIC_DNS_NAME=$(aws cloudformation describe-stacks --stack-name "$BASTION_STACK" --query "Stacks[0].Outputs[?OutputKey=='BastionPublicDnsName'].OutputValue" --output text)
DATABASE_HOST_NAME=$(aws cloudformation describe-stacks --stack-name "$BASTION_STACK" --query "Stacks[0].Outputs[?OutputKey=='DatabaseHostName'].OutputValue" --output text)
DATABASE_PORT=$(aws cloudformation describe-stacks --stack-name "$BASTION_STACK" --query "Stacks[0].Outputs[?OutputKey=='DatabasePort'].OutputValue" --output text)
DATABASE_SECRET_ARN=$(aws cloudformation describe-stacks --stack-name "$BASTION_STACK" --query "Stacks[0].Outputs[?OutputKey=='DatabaseSecretArn'].OutputValue" --output text)
DATABASE_SECRET=$(aws secretsmanager get-secret-value --secret-id "$DATABASE_SECRET_ARN" | jq --raw-output .SecretString | jq -r ."password" )

echo "START: SSH Key Download"
aws s3 cp "s3://$EC2_KEY_S3_BUCKET/$EC2_KEY_NAME.pem" "./$EC2_KEY_NAME.pem"
chmod 0400 "./$EC2_KEY_NAME.pem"
echo "STOP: SSH Key Download"

echo "START: SSH Tunnel"
# Do I need to clean this up
# -o trusts that the EC2 instance is not MTM
# -4 IPV4
nohup ssh -i "./$EC2_KEY_NAME.pem" \
    -4 \
    -o "StrictHostKeyChecking=no" \
    -N -L \
    "$DATABASE_LOCAL_PORT:$DATABASE_HOST_NAME:$DATABASE_PORT" \
    "ec2-user@$BASTION_PUBLIC_DNS_NAME" \
    > /dev/null 2> /dev/null < /dev/null &
echo "-> Connect with losthost, port $DATABASE_LOCAL_PORT, secret: $DATABASE_SECRET"
echo "DONE: SSH Tunnel"